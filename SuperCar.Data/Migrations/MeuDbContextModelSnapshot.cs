// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuperCar.Data.Context;

namespace SuperCar.Data.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    partial class MeuDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperCar.Business.Models.Cambio", b =>
                {
                    b.Property<Guid>("CambioId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("TipoCambio")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("CambioId");

                    b.ToTable("Cambios");
                });

            modelBuilder.Entity("SuperCar.Business.Models.Combustivel", b =>
                {
                    b.Property<Guid>("CombustivelId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("TipoCombustivel")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("CombustivelId");

                    b.ToTable("Combustiveis");
                });

            modelBuilder.Entity("SuperCar.Business.Models.Cor", b =>
                {
                    b.Property<Guid>("CorId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NomeCor")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("CorId");

                    b.ToTable("Cores");
                });

            modelBuilder.Entity("SuperCar.Business.Models.Marca", b =>
                {
                    b.Property<Guid>("MarcaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NomeMarca")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("MarcaId");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("SuperCar.Business.Models.Veiculo", b =>
                {
                    b.Property<Guid>("VeiculoId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Ano");

                    b.Property<int>("AnoModelo");

                    b.Property<Guid?>("CambioId");

                    b.Property<Guid?>("CombustivelId");

                    b.Property<Guid?>("CorId");

                    b.Property<int>("KmRodado");

                    b.Property<Guid?>("MarcaId");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ObsVeiculo")
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("varchar(7)");

                    b.Property<int>("QtdPortas");

                    b.HasKey("VeiculoId");

                    b.HasIndex("CambioId");

                    b.HasIndex("CombustivelId");

                    b.HasIndex("CorId");

                    b.HasIndex("MarcaId");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("SuperCar.Business.Models.Veiculo", b =>
                {
                    b.HasOne("SuperCar.Business.Models.Cambio", "Cambio")
                        .WithMany()
                        .HasForeignKey("CambioId");

                    b.HasOne("SuperCar.Business.Models.Combustivel", "Combustivel")
                        .WithMany()
                        .HasForeignKey("CombustivelId");

                    b.HasOne("SuperCar.Business.Models.Cor", "Cor")
                        .WithMany()
                        .HasForeignKey("CorId");

                    b.HasOne("SuperCar.Business.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId");
                });
#pragma warning restore 612, 618
        }
    }
}
